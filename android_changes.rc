#!/bin/bash
# ======================================
#   Developed by Adrian DC - 2015-2016
# ======================================

# === Repo Changes Logger ===
function repochanges()
{
  # Variables
  local ignored_projects='external/';
  if [ ! -z "${1}" ]; then
    ignored_projects="${1}";
  fi;

  # Diff execution
  echo '';
  echo -n ' Scanning...';
  repo forall -c "

     # Filter out projects
     if [ ! -z \$(echo \"\${REPO_PATH}\" | grep -i \"${ignored_projects}\") ]; then
       echo -n \"\r\033[K Ignoring \${REPO_PROJECT} [\${REPO_REMOTE}/\${REPO_RREV##*/}] \";
       return;
     fi;

     # Show and fetch projects
     echo -n \"\r\033[K Scanning \${REPO_PROJECT} [\${REPO_REMOTE}/\${REPO_RREV##*/}] \";
     git fetch --quiet \${REPO_REMOTE} \${REPO_RREV##*/};

     # Detect new remote commits
     changescount=\$(git rev-list --right-only --count HEAD...FETCH_HEAD);
     if [ \${changescount} -ne 0 ]; then
       echo \"\r\033[K Project \${REPO_PROJECT}: \${changescount} remote updates\";
       git log --pretty=oneline --abbrev-commit --max-count=\${changescount} FETCH_HEAD;
       echo '';
     fi;

     # Detect local commits
     changescount=\$(git rev-list --left-only --count HEAD...FETCH_HEAD);
     if [ \${changescount} -ne 0 ]; then
       echo \"\r\033[K Project \${REPO_PROJECT}: \${changescount} local changes\";
       git log --pretty=oneline --abbrev-commit --max-count=\${changescount} HEAD;
       echo '';
     fi;

     # Detect local differences
     if [ \$(git diff --quiet; echo \${?}) -ne 0 ]; then
       echo \"\r\033[K Project \${REPO_PROJECT}: Unmerged differences\";
       git diff;
       echo '';
     fi;
    " 2> /dev/null;

  # Done
  echo '';
}


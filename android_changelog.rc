# ======================================
#  Original code by Akhil Narang - 2015
#      Reworked by Adrian DC - 2016
# ======================================

# === Repo Changeloger ===
function repochangelog()
{
  if [ -z "$ANDROID_BUILD_TOP" ] || [ -z "$OUT" ]; then
    echo " repochangelog can only be used in a build ready environment";
    echo "";
    return;
  fi;

  cwd=$(pwd);
  cd $ANDROID_BUILD_TOP;

  local changelogname=Changelog.txt;
  local changelog=$OUT/$changelogname;
  loadcolors;

  local changelogdays=5;
  if [ ! -z "$1" ]; then
    changelogdays=$1;
  fi;

  if [ -f "$changelog" ]; then
    rm -f "$changelog";
  fi;
  touch "$changelog";

  # Print something to build output
  echo "";
  echo ${bldppl}" Generating changelog..."${txtrst};

  for i in $(seq $changelogdays); do
    export After_Date=$(date --date="$i days ago" +%m-%d-%Y);
    export Until_Date=$(date --date="$(expr $i - 1) days ago" +%m-%d-%Y);

    # Line with after --- until was too long for a small ListView
    echo ${ylw}"  Processing $Until_Date..."${txtrst};
    echo ' ======================' >> "$changelog";
    echo "  ChangeLog "$Until_Date >> "$changelog";
    echo ' ======================' >> "$changelog";

    # Cycle through every repo to find commits between 2 dates
    repo forall -pc 'git log --oneline --after=$After_Date --until=$Until_Date' >> "$changelog";
    echo >> "$changelog";
  done;

  sed -i 's/project \(.*\)\//  * \1\n/g' "$changelog";

  if [ -e $OUT/system/etc/$changelogname ]; then
    rm $OUT/system/etc/$changelogname
  fi;
  cp "$changelog" $OUT/system/etc/
  cd $cwd;

  echo ${bldcya}" ChangeLog saved: "${txtrst}${txtbld}"$changelog"${txtrst};
  echo "";
}

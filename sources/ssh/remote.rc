#!/bin/bash
#
# Copyright 2015-2020 Adrian DC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# === SSH Remote Configuration ===
function sshremote()
{
  # Usage: sshremote (Get the configured SSH target)

  # SSH Remote Credentials
  export SSHRemoteUrl='ssh.domain.universe';
  export SSHRemoteUser='user';

  # Create  .bash_android.sshremote.rc with the exports to override the credentials
  if [ -f "${ADVANCED_DEVELOPMENT_SHELL_TOOLS_WORKSPACE:-${HOME}}/.bash_android.sshremote.rc" ]; then
    source "${ADVANCED_DEVELOPMENT_SHELL_TOOLS_WORKSPACE:-${HOME}}/.bash_android.sshremote.rc";
  fi;

  # Ignore missing credentials
  if [ "${SSHRemoteUrl}" = 'ssh.domain.universe' ]; then
    >&2 echo '';
    >&2 echo -e ' \e[1;31mError: Use "shtoolsf sshremote" to see how to set your logins\e[0m';
    >&2 echo '';
    return;
  fi;

  # Return SSH target
  echo "${SSHRemoteUser}@${SSHRemoteUrl}";
}

# === SSH Server Shortcut ===
alias sshserv='ssh $(sshremote)';

# === SSH Server Folders Syncer ===
function sshsync()
{
  # Usage
  if [ -z "${1}" ] || [ -z "${2}" ] || [ -z "${3}" ]; then
    echo '';
    echo ' Usage: sshsync <up/down> <local_path> <remote_path> [params] (Mirror remote server folder)';
    echo '';
    return;
  fi;

  # Variables
  local mode=${1};
  local local_path=${2};
  local remote_path=${3};
  local remote_ssh;

  # Initialize variables
  remote_ssh=$(sshremote);

  # Upload sync execution
  if [ "${mode}" = 'up' ]; then
    rsync -av --delete "${local_path}" "${remote_ssh}:${remote_path}" "${@:4}";

  # Download sync execution
  else
    rsync -av --delete "${remote_ssh}:${remote_path}" "${local_path}" "${@:4}";
  fi;
}

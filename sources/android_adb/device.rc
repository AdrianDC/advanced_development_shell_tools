#!/bin/bash
#
# Copyright 2015-2020 Adrian DC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# === ADB Power-off ===
function adbpo()
{
  # Usage: adbpo (Power-off device through adb)

  # Verify adb is ready
  adbready;

  # Power-off device through adb
  adb shell 'reboot -p';
}

# === ADB Reboot ===
function adbre()
{
  # Usage: adbre (Reboot device through adb)

  # Verify adb is ready
  adbready;

  # Reboot device through adb
  adb reboot;
}

# === ADB Hot Reboot ===
function adbrh()
{
  # Usage: adbrh (Hot-reboot device through adb)

  # Verify adb is ready
  adbready;

  # Hot-reboot device through adb
  adb shell setprop ctl.restart zygote;
}

# === ADB Reboot Recovery ===
function adbrr()
{
  # Usage: adbrr (Reboot device to recovery through adb)

  # Verify adb is ready
  adbready;

  # Reboot device to recovery through adb
  adb reboot recovery;
}

# === ADB Reboot Bootloader ===
function adbrb()
{
  # Usage: adbrb (Reboot device to bootloader through adb)

  # Verify adb is ready
  adbready;

  # Reboot device to bootloader through adb
  adb reboot bootloader;
}

# === ADB Wait For Device ===
function adbw()
{
  # Usage: adbw (Wait for device through adb)

  # Verify adb is ready
  adbready;

  # Wait for device through adb
  adb 'wait-for-device';
}

# === ADB Get Device Enforced ===
function adbgetenforced()
{
  # Usage: adbgetenforced (Get device enforced status through adb)

  # Verify adb is ready
  adbready;

  # Get device enforced status through adb
  echo '';
  echo -en ' \e[1;33madbgetenforced: \e[1;37m';
  adb shell 'getenforce';
  echo -e '\e[0m';
}

# === ADB Set Device Enforced ===
function adbsetenforced()
{
  # Usage: adbsetenforced (Set device enforced through adb)

  # Verify adb is ready
  adbready;

  # Set device enforced through adb
  adbsu 'setenforce 1';

  # Get device status
  adbgetenforced;
}

# === ADB Set Device Permissive ===
function adbsetpermissive()
{
  # Usage: adbsetpermissive (Set device permissive through adb)

  # Verify adb is ready
  adbready;

  # Set device permissive through adb
  adbsu 'setenforce 0';

  # Get device status
  adbgetenforced;
}

#!/bin/bash
#
# Copyright 2015-2020 Adrian DC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# === Git Projects Statistics ===
function gitstat()
{
  # Usage
  if [ "${1}" = '--help' ]; then
    echo '';
    echo ' Usage: gitstat [remote] [branch] [stats_only] (Git history with remote comparator)';
    echo '';
    return;
  fi;

  # Variables
  local branch;
  local remote;
  local stats_only;

  # Initializations
  remote=${1:-$(gitgetremote)};
  branch=${2:-$(gitgetbranch "${remote}")};
  stats_only=${3};

  # Informations
  echo -e " \e[1;33mgitstat:\e[0m git fetch ${remote} ${branch}; git rev-list --left-right HEAD...FETCH_HEAD;";
  echo '';

  # Fetch existing remote branch
  if git fetch "${remote}" "${branch}"; then

    # Differences
    if [ ! -z "${stats_only}" ]; then
      git --no-pager diff --stat HEAD FETCH_HEAD;
    else
      git --no-pager diff HEAD...FETCH_HEAD;
    fi;

    # Comparison
    echo '';
    echo -en ' \e[1;33mgitstat: \e[1;37mLocal commits:\e[1;33m ';
    git rev-list --left-right HEAD...FETCH_HEAD | grep -c '^<' | xargs echo -n;
    echo -en ' \e[1;37m| Upstream commits:\e[1;33m ';
    git rev-list --left-right HEAD...FETCH_HEAD | grep -c '^>';
    echo -en '\e[0m';
    echo '';

  # Missing remote branch
  else

    # Present missing branch information
    echo '';
    echo -e " \e[1;33mgitstat: \e[1;37mRemote branch '${branch}' branch was not found...\e[0m";
    echo '';
    sleep 1;

  fi;
}

# === Git Projects Statistics Shortcut ===
alias gitst='gitstat';

# === Git Projects Statistics (origin) ===
alias gitsto='gitremoteverify origin gitrao && gitstat origin $(git rev-parse --abbrev-ref HEAD)';
alias gitstom='gitremoteverify origin gitrao && gitstat origin master';

# === Git Projects Statistics (github) ===
alias gitstg='gitremoteverify github false && gitstat github';

# === Git Projects Statistics (aosp) ===
alias gitstaosp='gitremoteverify aosp false && gitstat aosp master';

#!/bin/bash
#
# Copyright 2015-2020 Adrian DC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# === Git MergeTool Shortcut ===
alias gitmt='git mergetool';

# === Git MergeTool Conflicts Editor ===
function gitmte()
{
  # Usage: gitmte (Merge tool with manual conflicts resolution)

  # Files differences
  git diff --name-only | uniq;
  echo '';

  # Edit all unmerged files
  for file in $(git diff --name-only | uniq); do
    echo -n " - ${file} : ";
    fileedit "${file}";
    echo -n ' Done ? [Enter / Ctrl+C] ';
    read -r;
    git add "${file}";
  done;
}

# === Git MergeTool Referenced ===
function gitmtr()
{
  # Usage
  if [ -z "${1}" ]; then
    echo '';
    echo ' Usage: gitmtr <referenced_path> (Merge tool with reference project sources)';
    echo '';
    return;
  fi;

  # Files differences
  git diff --name-only | uniq;
  echo '';

  # Edit all unmerged files with reference
  for file in $(git diff --name-only | uniq); do
    echo -n " - ${file} : ";
    pathscompare "${file}" "${1}/${file}" --wait;
    echo -n ' Done ? [Enter / Ctrl+C] ';
    read -r;
    git add "${file}";
  done;
}

# === Git MergeTool Basic Conflicts ===
function gitmtbasic()
{
  # Usage: gitmtbasic (Merge tool with basic additions resolution)

  # Files differences
  git diff --name-only | uniq;
  echo '';

  # Basic fix for all unmerged files
  for file in $(git diff --name-only | uniq); do
    git --no-pager diff "${file}";
    echo '';
    echo -n " ${file}: Diff before fix [Enter / Ctrl+C] ";
    read -r;
    echo '';
    sed -i '/>>>>>>>.*/d' "${file}";
    sed -i 's/=======.*//g' "${file}";
    sed -i '/<<<<<<<.*/d' "${file}";
    git --no-pager diff "${file}";
    echo '';
    echo -n " ${file}: Done ? [Enter / Ctrl+C] ";
    read -r;
    git add "${file}";
  done;

  # Commit results
  echo '';
  GIT_EDITOR="sed -i '/^#/d'" git commit;
  echo '';
}

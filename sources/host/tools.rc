#!/bin/bash
#
# Copyright 2015-2020 Adrian DC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# === Standalone Source Helper ===
# source <(curl -Ls1 https://github.com/AdrianDC/advanced_development_shell_tools/raw/master/sources/host/edit.rc)
# source <(curl -Ls1 https://github.com/AdrianDC/advanced_development_shell_tools/raw/master/sources/host/tools.rc)

# === Hastebin ===
function haste()
{
  # Usage: haste <file> or | haste (Share hastebin logs)

  # Based upon https://github.com/seejohnrun/haste-client

  # Variables
  local tmp;
  local url;

  # Get output
  tmp=$(mktemp);
  if [ ! -z "${1}" ] && [ -f "${1}" ]; then
    tee "${tmp}" < "${1}";
  else
    cat | tee "${tmp}";
  fi;
  echo '';

  # Trim line rewrites
  edittrimoutput "${tmp}";

  # Upload to hastebin
  url=$(timeout -k 10 10 curl -X POST -s --data-binary @"${tmp}" https://hastebin.com/documents \
      | awk -F '"' '{ print "http://hastebin.com/"$4; }');
  echo " haste: ${url}";

  # Open url and delete temp file
  urlopen "${url}";
  rm "${tmp}";
}

# === Remote Script Launcher ===
function remotescript()
{
  # Usage
  if [ -z "${1}" ]; then
    echo '';
    echo ' Usage: remotescript <url> [bool_automated] (Remote script launcher with confirmations)';
    echo '';
    return;
  fi;

  # Variables
  local script=${1};
  local line;
  local tmpfile;

  # Header
  echo '';
  echo -e " \e[1;33mremotescript: Importing ${script}...\e[0m";
  echo '';

  # Retrieve script
  tmpfile=$(mktemp);
  curl -Ls1 "${script}" > "${tmpfile}";

  # Open descriptor 3 on input
  exec 3<"${tmpfile}";

  # Loop through script
  while IFS= read -r -u 3 line; do

    # Handle comment lines
    if echo "${line}" | grep -q '^[ ]*\(#.*\|\)$'; then
      echo -e "\e[1;36m${line}\e[0m";

    # Handle commands lines
    else
      if [ ! -z "${2}" ]; then
        echo -e "\e[1;32m${line}\e[0m";
      else
        echo -en "\e[1;32m${line} \e[1;33m[Enter]\e[0m";
        read -r;
      fi;
      # shellcheck disable=SC2001
      line=$(echo "${line}" | sed 's/;[ ]*$//g');
      ${line};
    fi;

  done;

  # Finish process
  echo '';
  rm -f "${tmpfile}";
  exec 3<&-;
}

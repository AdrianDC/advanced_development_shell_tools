#!/bin/bash
#
# Copyright 2015-2020 Adrian DC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# === VirtualBox as root ===
function virtualboxroot()
{
  # Usage: virtualboxroot (Launch VirtualBox as root)

  # Acquire root rights
  sudo echo -n '';

  # Launch and detach VirtualBox as root
  sudo virtualbox >/dev/null 2>&1 </dev/null &
}

# === VirtualBox Modules Sign ===
function virtualboxmodulessign()
{
  # Usage: virtualboxmodulessign (Sign VirtualBox modules)

  # Variables
  local module_name;

  # Validate root access
  if [ ! "$(whoami)" = 'root' ]; then
    echo '';
    echo ' WARNING: Please run virtualboxmodulessign as root only';
    echo '';
    return;
  fi;

  # Prepare signature keys
  if [ ! -d /root/module-signing ]; then
    mkdir -p /root/module-signing/;
    cd /root/module-signing/;
    openssl req -new -x509 -newkey rsa:2048 -keyout ./MOK.priv -outform DER -out ./MOK.der -nodes -days 36500 -subj "/CN=PrivateModulesSignature/";
    chmod 600 ./MOK.priv;
    echo '';
    echo -e ' \e[1;33mINFORMATION: Please enter a one-time simple password to import the keys...\e[0m';
    echo '';
    mokutil --import /root/module-signing/MOK.der;
    echo '';
    echo -e ' \e[1;33mWARNING: Please reboot, enter the previous password, and run virtualboxmodulessign again\e[0m';
    echo '';
    return;
  fi;

  # Iterate through modules
  for module_name in vboxdrv vboxnetflt vboxnetadp; do

    # Sign module
    "/usr/src/linux-headers-$(uname -r)/scripts/sign-file" sha256 /root/module-signing/MOK.priv /root/module-signing/MOK.der "$(modinfo -n "${module_name}")";

    # Load module
    echo -e " \e[1;33mvirtualboxmodulessign: \e[1;37mLoading module ${module_name}...\e[0m";
    if modprobe "${module_name}"; then
      echo -e " \e[1;33mvirtualboxmodulessign: \e[1;32mSuccessfully loaded ${module_name}\e[0m";
    else
      echo -e " \e[1;33mvirtualboxmodulessign: \e[1;31mFailed to load ${module_name}\e[0m"
    fi

  done
}
